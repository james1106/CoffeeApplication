<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mk.coffee.mapper.CoffeeMachineMapper">
    <resultMap id="BaseResultMap" type="com.mk.coffee.model.CoffeeMachine">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="code" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="create_date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="address" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="longitude" javaType="java.lang.Double" jdbcType="DOUBLE"/>
            <arg column="latitude" javaType="java.lang.Double" jdbcType="DOUBLE"/>
        </constructor>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, user_id, code, create_date, address, longitude, latitude
    </sql>
    <select id="selectByExample" parameterType="com.mk.coffee.model.CoffeeMachineExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from coffee_machine
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="com.mk.coffee.model.CoffeeMachineExample">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from coffee_machine
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insertSelective" parameterType="com.mk.coffee.model.CoffeeMachine">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into coffee_machine
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="longitude != null">
                longitude,
            </if>
            <if test="latitude != null">
                latitude,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="longitude != null">
                #{longitude,jdbcType=DOUBLE},
            </if>
            <if test="latitude != null">
                #{latitude,jdbcType=DOUBLE},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.mk.coffee.model.CoffeeMachineExample" resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from coffee_machine
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update coffee_machine
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.code != null">
                code = #{record.code,jdbcType=VARCHAR},
            </if>
            <if test="record.createDate != null">
                create_date = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.longitude != null">
                longitude = #{record.longitude,jdbcType=DOUBLE},
            </if>
            <if test="record.latitude != null">
                latitude = #{record.latitude,jdbcType=DOUBLE},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update coffee_machine
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        code = #{record.code,jdbcType=VARCHAR},
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
        address = #{record.address,jdbcType=VARCHAR},
        longitude = #{record.longitude,jdbcType=DOUBLE},
        latitude = #{record.latitude,jdbcType=DOUBLE}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.mk.coffee.model.CoffeeMachine">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update coffee_machine
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="longitude != null">
                longitude = #{longitude,jdbcType=DOUBLE},
            </if>
            <if test="latitude != null">
                latitude = #{latitude,jdbcType=DOUBLE},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>


    <!--
    @Param("minLat") double minLat,
     @Param("maxLat") double maxLat,
     @Param("minLng") double minLng,
      @Param("maxLng") double maxLng
    -->
    <select id="getNearbyCoffeesMachine" resultType="com.mk.coffee.model.CoffeeMachine">
        SELECT
        cm.id,
        cm.code,
        cm.address,
        cm.create_date,
        cm.longitude,
        cm.latitude,
        u.user_id "user.userId",
        u.username "user.username",
        u.mobile "user.mobile",
        u.email "user.email"
        FROM coffee_machine cm
        LEFT OUTER JOIN sys_user u ON u.user_id=cm.user_id
        WHERE latitude BETWEEN #{minLat} AND #{maxLat} AND longitude BETWEEN #{minLng} AND #{maxLng}
    </select>

    <select id="getAllCoffeesMachine" resultType="com.mk.coffee.model.CoffeeMachine">
        SELECT
        cm.id,
        cm.code,
        cm.address,
        cm.create_date,
        cm.longitude,
        cm.latitude,
        u.user_id "user.userId",
        u.username "user.username",
        u.mobile "user.mobile",
        u.email "user.email",
        u.head_portrait "user.headPortrait"
        FROM coffee_machine cm
        LEFT OUTER JOIN sys_user u ON u.user_id=cm.user_id
    </select>
</mapper>