package com.mk.coffee.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CustomConfigExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table custom_config
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table custom_config
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table custom_config
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table custom_config
     *
     * @mbg.generated
     */
    public CustomConfigExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table custom_config
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table custom_config
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table custom_config
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table custom_config
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table custom_config
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table custom_config
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table custom_config
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table custom_config
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table custom_config
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table custom_config
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table custom_config
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andCoffeeIsNull() {
            addCriterion("coffee is null");
            return (Criteria) this;
        }

        public Criteria andCoffeeIsNotNull() {
            addCriterion("coffee is not null");
            return (Criteria) this;
        }

        public Criteria andCoffeeEqualTo(Integer value) {
            addCriterion("coffee =", value, "coffee");
            return (Criteria) this;
        }

        public Criteria andCoffeeNotEqualTo(Integer value) {
            addCriterion("coffee <>", value, "coffee");
            return (Criteria) this;
        }

        public Criteria andCoffeeGreaterThan(Integer value) {
            addCriterion("coffee >", value, "coffee");
            return (Criteria) this;
        }

        public Criteria andCoffeeGreaterThanOrEqualTo(Integer value) {
            addCriterion("coffee >=", value, "coffee");
            return (Criteria) this;
        }

        public Criteria andCoffeeLessThan(Integer value) {
            addCriterion("coffee <", value, "coffee");
            return (Criteria) this;
        }

        public Criteria andCoffeeLessThanOrEqualTo(Integer value) {
            addCriterion("coffee <=", value, "coffee");
            return (Criteria) this;
        }

        public Criteria andCoffeeIn(List<Integer> values) {
            addCriterion("coffee in", values, "coffee");
            return (Criteria) this;
        }

        public Criteria andCoffeeNotIn(List<Integer> values) {
            addCriterion("coffee not in", values, "coffee");
            return (Criteria) this;
        }

        public Criteria andCoffeeBetween(Integer value1, Integer value2) {
            addCriterion("coffee between", value1, value2, "coffee");
            return (Criteria) this;
        }

        public Criteria andCoffeeNotBetween(Integer value1, Integer value2) {
            addCriterion("coffee not between", value1, value2, "coffee");
            return (Criteria) this;
        }

        public Criteria andMilkIsNull() {
            addCriterion("milk is null");
            return (Criteria) this;
        }

        public Criteria andMilkIsNotNull() {
            addCriterion("milk is not null");
            return (Criteria) this;
        }

        public Criteria andMilkEqualTo(Integer value) {
            addCriterion("milk =", value, "milk");
            return (Criteria) this;
        }

        public Criteria andMilkNotEqualTo(Integer value) {
            addCriterion("milk <>", value, "milk");
            return (Criteria) this;
        }

        public Criteria andMilkGreaterThan(Integer value) {
            addCriterion("milk >", value, "milk");
            return (Criteria) this;
        }

        public Criteria andMilkGreaterThanOrEqualTo(Integer value) {
            addCriterion("milk >=", value, "milk");
            return (Criteria) this;
        }

        public Criteria andMilkLessThan(Integer value) {
            addCriterion("milk <", value, "milk");
            return (Criteria) this;
        }

        public Criteria andMilkLessThanOrEqualTo(Integer value) {
            addCriterion("milk <=", value, "milk");
            return (Criteria) this;
        }

        public Criteria andMilkIn(List<Integer> values) {
            addCriterion("milk in", values, "milk");
            return (Criteria) this;
        }

        public Criteria andMilkNotIn(List<Integer> values) {
            addCriterion("milk not in", values, "milk");
            return (Criteria) this;
        }

        public Criteria andMilkBetween(Integer value1, Integer value2) {
            addCriterion("milk between", value1, value2, "milk");
            return (Criteria) this;
        }

        public Criteria andMilkNotBetween(Integer value1, Integer value2) {
            addCriterion("milk not between", value1, value2, "milk");
            return (Criteria) this;
        }

        public Criteria andSugarIsNull() {
            addCriterion("sugar is null");
            return (Criteria) this;
        }

        public Criteria andSugarIsNotNull() {
            addCriterion("sugar is not null");
            return (Criteria) this;
        }

        public Criteria andSugarEqualTo(Integer value) {
            addCriterion("sugar =", value, "sugar");
            return (Criteria) this;
        }

        public Criteria andSugarNotEqualTo(Integer value) {
            addCriterion("sugar <>", value, "sugar");
            return (Criteria) this;
        }

        public Criteria andSugarGreaterThan(Integer value) {
            addCriterion("sugar >", value, "sugar");
            return (Criteria) this;
        }

        public Criteria andSugarGreaterThanOrEqualTo(Integer value) {
            addCriterion("sugar >=", value, "sugar");
            return (Criteria) this;
        }

        public Criteria andSugarLessThan(Integer value) {
            addCriterion("sugar <", value, "sugar");
            return (Criteria) this;
        }

        public Criteria andSugarLessThanOrEqualTo(Integer value) {
            addCriterion("sugar <=", value, "sugar");
            return (Criteria) this;
        }

        public Criteria andSugarIn(List<Integer> values) {
            addCriterion("sugar in", values, "sugar");
            return (Criteria) this;
        }

        public Criteria andSugarNotIn(List<Integer> values) {
            addCriterion("sugar not in", values, "sugar");
            return (Criteria) this;
        }

        public Criteria andSugarBetween(Integer value1, Integer value2) {
            addCriterion("sugar between", value1, value2, "sugar");
            return (Criteria) this;
        }

        public Criteria andSugarNotBetween(Integer value1, Integer value2) {
            addCriterion("sugar not between", value1, value2, "sugar");
            return (Criteria) this;
        }

        public Criteria andIsRecommendIsNull() {
            addCriterion("is_recommend is null");
            return (Criteria) this;
        }

        public Criteria andIsRecommendIsNotNull() {
            addCriterion("is_recommend is not null");
            return (Criteria) this;
        }

        public Criteria andIsRecommendEqualTo(Boolean value) {
            addCriterion("is_recommend =", value, "isRecommend");
            return (Criteria) this;
        }

        public Criteria andIsRecommendNotEqualTo(Boolean value) {
            addCriterion("is_recommend <>", value, "isRecommend");
            return (Criteria) this;
        }

        public Criteria andIsRecommendGreaterThan(Boolean value) {
            addCriterion("is_recommend >", value, "isRecommend");
            return (Criteria) this;
        }

        public Criteria andIsRecommendGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_recommend >=", value, "isRecommend");
            return (Criteria) this;
        }

        public Criteria andIsRecommendLessThan(Boolean value) {
            addCriterion("is_recommend <", value, "isRecommend");
            return (Criteria) this;
        }

        public Criteria andIsRecommendLessThanOrEqualTo(Boolean value) {
            addCriterion("is_recommend <=", value, "isRecommend");
            return (Criteria) this;
        }

        public Criteria andIsRecommendIn(List<Boolean> values) {
            addCriterion("is_recommend in", values, "isRecommend");
            return (Criteria) this;
        }

        public Criteria andIsRecommendNotIn(List<Boolean> values) {
            addCriterion("is_recommend not in", values, "isRecommend");
            return (Criteria) this;
        }

        public Criteria andIsRecommendBetween(Boolean value1, Boolean value2) {
            addCriterion("is_recommend between", value1, value2, "isRecommend");
            return (Criteria) this;
        }

        public Criteria andIsRecommendNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_recommend not between", value1, value2, "isRecommend");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNull() {
            addCriterion("create_date is null");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNotNull() {
            addCriterion("create_date is not null");
            return (Criteria) this;
        }

        public Criteria andCreateDateEqualTo(Date value) {
            addCriterion("create_date =", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotEqualTo(Date value) {
            addCriterion("create_date <>", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThan(Date value) {
            addCriterion("create_date >", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
            addCriterion("create_date >=", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThan(Date value) {
            addCriterion("create_date <", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThanOrEqualTo(Date value) {
            addCriterion("create_date <=", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateIn(List<Date> values) {
            addCriterion("create_date in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotIn(List<Date> values) {
            addCriterion("create_date not in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateBetween(Date value1, Date value2) {
            addCriterion("create_date between", value1, value2, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotBetween(Date value1, Date value2) {
            addCriterion("create_date not between", value1, value2, "createDate");
            return (Criteria) this;
        }

        public Criteria andCoffeeNameIsNull() {
            addCriterion("coffee_name is null");
            return (Criteria) this;
        }

        public Criteria andCoffeeNameIsNotNull() {
            addCriterion("coffee_name is not null");
            return (Criteria) this;
        }

        public Criteria andCoffeeNameEqualTo(String value) {
            addCriterion("coffee_name =", value, "coffeeName");
            return (Criteria) this;
        }

        public Criteria andCoffeeNameNotEqualTo(String value) {
            addCriterion("coffee_name <>", value, "coffeeName");
            return (Criteria) this;
        }

        public Criteria andCoffeeNameGreaterThan(String value) {
            addCriterion("coffee_name >", value, "coffeeName");
            return (Criteria) this;
        }

        public Criteria andCoffeeNameGreaterThanOrEqualTo(String value) {
            addCriterion("coffee_name >=", value, "coffeeName");
            return (Criteria) this;
        }

        public Criteria andCoffeeNameLessThan(String value) {
            addCriterion("coffee_name <", value, "coffeeName");
            return (Criteria) this;
        }

        public Criteria andCoffeeNameLessThanOrEqualTo(String value) {
            addCriterion("coffee_name <=", value, "coffeeName");
            return (Criteria) this;
        }

        public Criteria andCoffeeNameLike(String value) {
            addCriterion("coffee_name like", value, "coffeeName");
            return (Criteria) this;
        }

        public Criteria andCoffeeNameNotLike(String value) {
            addCriterion("coffee_name not like", value, "coffeeName");
            return (Criteria) this;
        }

        public Criteria andCoffeeNameIn(List<String> values) {
            addCriterion("coffee_name in", values, "coffeeName");
            return (Criteria) this;
        }

        public Criteria andCoffeeNameNotIn(List<String> values) {
            addCriterion("coffee_name not in", values, "coffeeName");
            return (Criteria) this;
        }

        public Criteria andCoffeeNameBetween(String value1, String value2) {
            addCriterion("coffee_name between", value1, value2, "coffeeName");
            return (Criteria) this;
        }

        public Criteria andCoffeeNameNotBetween(String value1, String value2) {
            addCriterion("coffee_name not between", value1, value2, "coffeeName");
            return (Criteria) this;
        }

        public Criteria andMilkNameIsNull() {
            addCriterion("milk_name is null");
            return (Criteria) this;
        }

        public Criteria andMilkNameIsNotNull() {
            addCriterion("milk_name is not null");
            return (Criteria) this;
        }

        public Criteria andMilkNameEqualTo(String value) {
            addCriterion("milk_name =", value, "milkName");
            return (Criteria) this;
        }

        public Criteria andMilkNameNotEqualTo(String value) {
            addCriterion("milk_name <>", value, "milkName");
            return (Criteria) this;
        }

        public Criteria andMilkNameGreaterThan(String value) {
            addCriterion("milk_name >", value, "milkName");
            return (Criteria) this;
        }

        public Criteria andMilkNameGreaterThanOrEqualTo(String value) {
            addCriterion("milk_name >=", value, "milkName");
            return (Criteria) this;
        }

        public Criteria andMilkNameLessThan(String value) {
            addCriterion("milk_name <", value, "milkName");
            return (Criteria) this;
        }

        public Criteria andMilkNameLessThanOrEqualTo(String value) {
            addCriterion("milk_name <=", value, "milkName");
            return (Criteria) this;
        }

        public Criteria andMilkNameLike(String value) {
            addCriterion("milk_name like", value, "milkName");
            return (Criteria) this;
        }

        public Criteria andMilkNameNotLike(String value) {
            addCriterion("milk_name not like", value, "milkName");
            return (Criteria) this;
        }

        public Criteria andMilkNameIn(List<String> values) {
            addCriterion("milk_name in", values, "milkName");
            return (Criteria) this;
        }

        public Criteria andMilkNameNotIn(List<String> values) {
            addCriterion("milk_name not in", values, "milkName");
            return (Criteria) this;
        }

        public Criteria andMilkNameBetween(String value1, String value2) {
            addCriterion("milk_name between", value1, value2, "milkName");
            return (Criteria) this;
        }

        public Criteria andMilkNameNotBetween(String value1, String value2) {
            addCriterion("milk_name not between", value1, value2, "milkName");
            return (Criteria) this;
        }

        public Criteria andSugarNameIsNull() {
            addCriterion("sugar_name is null");
            return (Criteria) this;
        }

        public Criteria andSugarNameIsNotNull() {
            addCriterion("sugar_name is not null");
            return (Criteria) this;
        }

        public Criteria andSugarNameEqualTo(String value) {
            addCriterion("sugar_name =", value, "sugarName");
            return (Criteria) this;
        }

        public Criteria andSugarNameNotEqualTo(String value) {
            addCriterion("sugar_name <>", value, "sugarName");
            return (Criteria) this;
        }

        public Criteria andSugarNameGreaterThan(String value) {
            addCriterion("sugar_name >", value, "sugarName");
            return (Criteria) this;
        }

        public Criteria andSugarNameGreaterThanOrEqualTo(String value) {
            addCriterion("sugar_name >=", value, "sugarName");
            return (Criteria) this;
        }

        public Criteria andSugarNameLessThan(String value) {
            addCriterion("sugar_name <", value, "sugarName");
            return (Criteria) this;
        }

        public Criteria andSugarNameLessThanOrEqualTo(String value) {
            addCriterion("sugar_name <=", value, "sugarName");
            return (Criteria) this;
        }

        public Criteria andSugarNameLike(String value) {
            addCriterion("sugar_name like", value, "sugarName");
            return (Criteria) this;
        }

        public Criteria andSugarNameNotLike(String value) {
            addCriterion("sugar_name not like", value, "sugarName");
            return (Criteria) this;
        }

        public Criteria andSugarNameIn(List<String> values) {
            addCriterion("sugar_name in", values, "sugarName");
            return (Criteria) this;
        }

        public Criteria andSugarNameNotIn(List<String> values) {
            addCriterion("sugar_name not in", values, "sugarName");
            return (Criteria) this;
        }

        public Criteria andSugarNameBetween(String value1, String value2) {
            addCriterion("sugar_name between", value1, value2, "sugarName");
            return (Criteria) this;
        }

        public Criteria andSugarNameNotBetween(String value1, String value2) {
            addCriterion("sugar_name not between", value1, value2, "sugarName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table custom_config
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table custom_config
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}