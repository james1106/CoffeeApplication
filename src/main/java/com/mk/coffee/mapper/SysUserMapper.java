package com.mk.coffee.mapper;

import com.mk.coffee.model.SysUser;
import com.mk.coffee.model.SysUserExample;

import java.util.List;

import org.apache.ibatis.annotations.*;

public interface SysUserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user
     *
     * @mbg.generated
     */
    long countByExample(SysUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user
     *
     * @mbg.generated
     */
    int deleteByExample(SysUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user
     *
     * @mbg.generated
     */
    @Delete({
            "delete from sys_user",
            "where user_id = #{userId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user
     *
     * @mbg.generated
     */
    @Insert({
            "insert into sys_user (user_id, username, ",
            "mobile, email, password, ",
            "status, create_id, ",
            "create_date, update_id, ",
            "update_date, salt, ",
            "head_portrait)",
            "values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, ",
            "#{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, ",
            "#{status,jdbcType=INTEGER}, #{createId,jdbcType=INTEGER}, ",
            "#{createDate,jdbcType=TIMESTAMP}, #{updateId,jdbcType=INTEGER}, ",
            "#{updateDate,jdbcType=TIMESTAMP}, #{salt,jdbcType=VARCHAR}, ",
            "#{headPortrait,jdbcType=VARCHAR})"
    })
    @Options(useGeneratedKeys = true, keyProperty = "userId")
    int insert(SysUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user
     *
     * @mbg.generated
     */
    @Options(useGeneratedKeys = true, keyProperty = "record.userId")
    int insertSelective(SysUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user
     *
     * @mbg.generated
     */
    List<SysUser> selectByExample(SysUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user
     *
     * @mbg.generated
     */
    @Select({
            "select",
            "user_id, username, mobile, email, password, status, create_id, create_date, ",
            "update_id, update_date, salt, head_portrait",
            "from sys_user",
            "where user_id = #{userId,jdbcType=INTEGER}"
    })
    @ResultMap("com.mk.coffee.mapper.SysUserMapper.BaseResultMap")
    SysUser selectByPrimaryKey(Integer userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") SysUser record, @Param("example") SysUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") SysUser record, @Param("example") SysUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(SysUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user
     *
     * @mbg.generated
     */
    @Update({
            "update sys_user",
            "set username = #{username,jdbcType=VARCHAR},",
            "mobile = #{mobile,jdbcType=VARCHAR},",
            "email = #{email,jdbcType=VARCHAR},",
            "password = #{password,jdbcType=VARCHAR},",
            "status = #{status,jdbcType=INTEGER},",
            "create_id = #{createId,jdbcType=INTEGER},",
            "create_date = #{createDate,jdbcType=TIMESTAMP},",
            "update_id = #{updateId,jdbcType=INTEGER},",
            "update_date = #{updateDate,jdbcType=TIMESTAMP},",
            "salt = #{salt,jdbcType=VARCHAR},",
            "head_portrait = #{headPortrait,jdbcType=VARCHAR}",
            "where user_id = #{userId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(SysUser record);

    SysUser loginAdmin(@Param("userName") String userName, @Param("password") String password);


    @Select({
            "select",
            "user_id, username, mobile, email, status, create_id, create_date, ",
            "update_id, update_date, salt,head_portrait",
            "from sys_user"
    })
    List<SysUser> getSysUsers();

    SysUser getSysUserById(@Param("userId") int userId);

    List<SysUser> searchSysUser(@Param("keyword") String keyword);
}