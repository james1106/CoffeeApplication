package com.mk.coffee.mapper;

import com.mk.coffee.model.WxMessage;
import com.mk.coffee.model.WxMessageExample;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface WxMessageMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_message
     *
     * @mbg.generated
     */
    long countByExample(WxMessageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_message
     *
     * @mbg.generated
     */
    int deleteByExample(WxMessageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_message
     *
     * @mbg.generated
     */
    @Delete({
            "delete from wx_message",
            "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_message
     *
     * @mbg.generated
     */
    @Insert({
            "insert into wx_message (id, from_user, ",
            "to_user, create_date, ",
            "msg_type, content)",
            "values (#{id,jdbcType=INTEGER}, #{fromUser,jdbcType=VARCHAR}, ",
            "#{toUser,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, ",
            "#{msgType,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR})"
    })
    int insert(WxMessage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_message
     *
     * @mbg.generated
     */
    int insertSelective(WxMessage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_message
     *
     * @mbg.generated
     */
    List<WxMessage> selectByExample(WxMessageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_message
     *
     * @mbg.generated
     */
    @Select({
            "select",
            "id, from_user, to_user, create_date, msg_type, content",
            "from wx_message",
            "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("com.mk.coffee.mapper.WxMessageMapper.BaseResultMap")
    WxMessage selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_message
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") WxMessage record, @Param("example") WxMessageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_message
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") WxMessage record, @Param("example") WxMessageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_message
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(WxMessage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_message
     *
     * @mbg.generated
     */
    @Update({
            "update wx_message",
            "set from_user = #{fromUser,jdbcType=VARCHAR},",
            "to_user = #{toUser,jdbcType=VARCHAR},",
            "create_date = #{createDate,jdbcType=TIMESTAMP},",
            "msg_type = #{msgType,jdbcType=VARCHAR},",
            "content = #{content,jdbcType=VARCHAR}",
            "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(WxMessage record);


    List<WxMessage> searchList(@Param("keyword") String keyword);
}