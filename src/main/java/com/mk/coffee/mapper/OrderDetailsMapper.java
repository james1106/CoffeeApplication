package com.mk.coffee.mapper;

import com.mk.coffee.model.OrderDetails;
import com.mk.coffee.model.OrderDetailsExample;

import java.util.Date;
import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface OrderDetailsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_details
     *
     * @mbg.generated
     */
    long countByExample(OrderDetailsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_details
     *
     * @mbg.generated
     */
    int deleteByExample(OrderDetailsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_details
     *
     * @mbg.generated
     */
    @Delete({
            "delete from order_details",
            "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_details
     *
     * @mbg.generated
     */
    @Insert({
            "insert into order_details (id, members_id, ",
            "money, discount_money, ",
            "coupon_id, wx_card_code, ",
            "bean, custom_id, ",
            "notes, create_date, ",
            "pay_state, end_date, ",
            "total, user_id, coffee_machine_id, ",
            "contacts, phone, ",
            "longitude, latitude, ",
            "address, state, ",
            "order_details)",
            "values (#{id,jdbcType=VARCHAR}, #{membersId,jdbcType=DECIMAL}, ",
            "#{money,jdbcType=REAL}, #{discountMoney,jdbcType=REAL}, ",
            "#{couponId,jdbcType=INTEGER}, #{wxCardCode,jdbcType=VARCHAR}, ",
            "#{bean,jdbcType=INTEGER}, #{customId,jdbcType=INTEGER}, ",
            "#{notes,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, ",
            "#{payState,jdbcType=INTEGER}, #{endDate,jdbcType=TIMESTAMP}, ",
            "#{total,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{coffeeMachineId,jdbcType=INTEGER}, ",
            "#{contacts,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, ",
            "#{longitude,jdbcType=DOUBLE}, #{latitude,jdbcType=DOUBLE}, ",
            "#{address,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, ",
            "#{orderDetails,jdbcType=LONGVARCHAR})"
    })
    int insert(OrderDetails record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_details
     *
     * @mbg.generated
     */
    int insertSelective(OrderDetails record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_details
     *
     * @mbg.generated
     */
    List<OrderDetails> selectByExampleWithBLOBs(OrderDetailsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_details
     *
     * @mbg.generated
     */
    List<OrderDetails> selectByExample(OrderDetailsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_details
     *
     * @mbg.generated
     */
    @Select({
            "select",
            "id, members_id, money, discount_money, coupon_id, wx_card_code, bean, custom_id, ",
            "notes, create_date, pay_state, end_date, total, user_id, coffee_machine_id, ",
            "contacts, phone, longitude, latitude, address, state, order_details",
            "from order_details",
            "where id = #{id,jdbcType=VARCHAR}"
    })
    @ResultMap("com.mk.coffee.mapper.OrderDetailsMapper.ResultMapWithBLOBs")
    OrderDetails selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_details
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") OrderDetails record, @Param("example") OrderDetailsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_details
     *
     * @mbg.generated
     */
    int updateByExampleWithBLOBs(@Param("record") OrderDetails record, @Param("example") OrderDetailsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_details
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") OrderDetails record, @Param("example") OrderDetailsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_details
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(OrderDetails record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_details
     *
     * @mbg.generated
     */
    @Update({
            "update order_details",
            "set members_id = #{membersId,jdbcType=DECIMAL},",
            "money = #{money,jdbcType=REAL},",
            "discount_money = #{discountMoney,jdbcType=REAL},",
            "coupon_id = #{couponId,jdbcType=INTEGER},",
            "wx_card_code = #{wxCardCode,jdbcType=VARCHAR},",
            "bean = #{bean,jdbcType=INTEGER},",
            "custom_id = #{customId,jdbcType=INTEGER},",
            "notes = #{notes,jdbcType=VARCHAR},",
            "create_date = #{createDate,jdbcType=TIMESTAMP},",
            "pay_state = #{payState,jdbcType=INTEGER},",
            "end_date = #{endDate,jdbcType=TIMESTAMP},",
            "total = #{total,jdbcType=INTEGER},",
            "user_id = #{userId,jdbcType=INTEGER},",
            "coffee_machine_id = #{coffeeMachineId,jdbcType=INTEGER},",
            "contacts = #{contacts,jdbcType=VARCHAR},",
            "phone = #{phone,jdbcType=VARCHAR},",
            "longitude = #{longitude,jdbcType=DOUBLE},",
            "latitude = #{latitude,jdbcType=DOUBLE},",
            "address = #{address,jdbcType=VARCHAR},",
            "state = #{state,jdbcType=INTEGER},",
            "order_details = #{orderDetails,jdbcType=LONGVARCHAR}",
            "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKeyWithBLOBs(OrderDetails record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_details
     *
     * @mbg.generated
     */
    @Update({
            "update order_details",
            "set members_id = #{membersId,jdbcType=DECIMAL},",
            "money = #{money,jdbcType=REAL},",
            "discount_money = #{discountMoney,jdbcType=REAL},",
            "coupon_id = #{couponId,jdbcType=INTEGER},",
            "wx_card_code = #{wxCardCode,jdbcType=VARCHAR},",
            "bean = #{bean,jdbcType=INTEGER},",
            "custom_id = #{customId,jdbcType=INTEGER},",
            "notes = #{notes,jdbcType=VARCHAR},",
            "create_date = #{createDate,jdbcType=TIMESTAMP},",
            "pay_state = #{payState,jdbcType=INTEGER},",
            "end_date = #{endDate,jdbcType=TIMESTAMP},",
            "total = #{total,jdbcType=INTEGER},",
            "user_id = #{userId,jdbcType=INTEGER},",
            "coffee_machine_id = #{coffeeMachineId,jdbcType=INTEGER},",
            "contacts = #{contacts,jdbcType=VARCHAR},",
            "phone = #{phone,jdbcType=VARCHAR},",
            "longitude = #{longitude,jdbcType=DOUBLE},",
            "latitude = #{latitude,jdbcType=DOUBLE},",
            "address = #{address,jdbcType=VARCHAR},",
            "state = #{state,jdbcType=INTEGER}",
            "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(OrderDetails record);

    @Select({"select",
            "id, members_id, money, discount_money, coupon_id, wx_card_code, bean, custom_id, ",
            "notes, create_date, pay_state, end_date, total, user_id, coffee_machine_id, ",
            "contacts, phone, longitude, latitude, address, state, order_details",
            "from order_details",
            "where members_id = #{memberId} and pay_state=#{payState} ORDER BY create_date DESC"})
    @ResultMap({"com.mk.coffee.mapper.OrderDetailsMapper.ResultMapWithBLOBs"})
    List<OrderDetails> selectOrderDetailsByMemberIdAndPayState(@Param("memberId") long memberId, @Param("payState") int payState);

    @Select({"select",
            "id, members_id, money, discount_money, coupon_id, wx_card_code, bean, custom_id, ",
            "notes, create_date, pay_state, end_date, total, user_id, coffee_machine_id, ",
            "contacts, phone, longitude, latitude, address, state, order_details",
            "from order_details",
            "ORDER BY create_date DESC"})
    @ResultMap({"com.mk.coffee.mapper.OrderDetailsMapper.ResultMapWithBLOBs"})
    List<OrderDetails> selectOrderDetails();


    @Update({
            "update order_details",
            "set discount_money = null,",
            "wx_card_code = null ",
            "where wx_card_code = #{wxCardCode} and pay_state =0"
    })
    int updateOrderDetailsByWxCardCode(@Param("wxCardCode") String wxCardCode);


    List<OrderDetails> getMerchantOrder(@Param("userId") int userId, @Param("coffeeMachineId") int coffeeMachineId);


    List<OrderDetails> getMerchantOrderByStateAndTimestamp(@Param("userId") int userId,
                                                           @Param("coffeeMachineId") int coffeeMachineId,
                                                           @Param("completed") Boolean completed,
                                                           @Param("startTimestamp") Date startTimestamp,
                                                           @Param("endTimestamp")Date endTimestamp);
}