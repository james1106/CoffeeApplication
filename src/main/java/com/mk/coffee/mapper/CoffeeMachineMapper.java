package com.mk.coffee.mapper;

import com.mk.coffee.model.CoffeeMachine;
import com.mk.coffee.model.CoffeeMachineExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface CoffeeMachineMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coffee_machine
     *
     * @mbg.generated
     */
    long countByExample(CoffeeMachineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coffee_machine
     *
     * @mbg.generated
     */
    int deleteByExample(CoffeeMachineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coffee_machine
     *
     * @mbg.generated
     */
    @Delete({
        "delete from coffee_machine",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coffee_machine
     *
     * @mbg.generated
     */
    @Insert({
        "insert into coffee_machine (id, user_id, ",
        "code, create_date, ",
        "address, longitude, ",
        "latitude)",
        "values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, ",
        "#{code,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, ",
        "#{address,jdbcType=VARCHAR}, #{longitude,jdbcType=DOUBLE}, ",
        "#{latitude,jdbcType=DOUBLE})"
    })
    int insert(CoffeeMachine record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coffee_machine
     *
     * @mbg.generated
     */
    int insertSelective(CoffeeMachine record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coffee_machine
     *
     * @mbg.generated
     */
    List<CoffeeMachine> selectByExample(CoffeeMachineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coffee_machine
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, user_id, code, create_date, address, longitude, latitude",
        "from coffee_machine",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("com.mk.coffee.mapper.CoffeeMachineMapper.BaseResultMap")
    CoffeeMachine selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coffee_machine
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") CoffeeMachine record, @Param("example") CoffeeMachineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coffee_machine
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") CoffeeMachine record, @Param("example") CoffeeMachineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coffee_machine
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(CoffeeMachine record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coffee_machine
     *
     * @mbg.generated
     */
    @Update({
        "update coffee_machine",
        "set user_id = #{userId,jdbcType=INTEGER},",
          "code = #{code,jdbcType=VARCHAR},",
          "create_date = #{createDate,jdbcType=TIMESTAMP},",
          "address = #{address,jdbcType=VARCHAR},",
          "longitude = #{longitude,jdbcType=DOUBLE},",
          "latitude = #{latitude,jdbcType=DOUBLE}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(CoffeeMachine record);


    List<CoffeeMachine> getNearbyCoffeesMachine(@Param("minLat") double minLat, @Param("maxLat") double maxLat, @Param("minLng") double minLng, @Param("maxLng") double maxLng);
}