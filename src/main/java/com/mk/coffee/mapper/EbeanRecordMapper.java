package com.mk.coffee.mapper;

import com.mk.coffee.model.EbeanRecord;
import com.mk.coffee.model.EbeanRecordExample;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface EbeanRecordMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ebean_record
     *
     * @mbg.generated
     */
    long countByExample(EbeanRecordExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ebean_record
     *
     * @mbg.generated
     */
    int deleteByExample(EbeanRecordExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ebean_record
     *
     * @mbg.generated
     */
    @Delete({
            "delete from ebean_record",
            "where id = #{id,jdbcType=DECIMAL}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ebean_record
     *
     * @mbg.generated
     */
    @Insert({
            "insert into ebean_record (id, member_id, ",
            "name, pay_type, pay_state, ",
            "e_num, giving_num, ",
            "total_num, money, create_date)",
            "values (#{id,jdbcType=DECIMAL}, #{memberId,jdbcType=DECIMAL}, ",
            "#{name,jdbcType=VARCHAR}, #{payType,jdbcType=INTEGER}, #{payState,jdbcType=INTEGER}, ",
            "#{eNum,jdbcType=INTEGER}, #{givingNum,jdbcType=INTEGER}, ",
            "#{totalNum,jdbcType=INTEGER}, #{money,jdbcType=REAL}, #{createDate,jdbcType=TIMESTAMP})"
    })
    int insert(EbeanRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ebean_record
     *
     * @mbg.generated
     */
    int insertSelective(EbeanRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ebean_record
     *
     * @mbg.generated
     */
    List<EbeanRecord> selectByExample(EbeanRecordExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ebean_record
     *
     * @mbg.generated
     */
    @Select({
            "select",
            "id, member_id, name, pay_type, pay_state, e_num, giving_num, total_num, money, ",
            "create_date",
            "from ebean_record",
            "where id = #{id,jdbcType=DECIMAL}"
    })
    @ResultMap("com.mk.coffee.mapper.EbeanRecordMapper.BaseResultMap")
    EbeanRecord selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ebean_record
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") EbeanRecord record, @Param("example") EbeanRecordExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ebean_record
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") EbeanRecord record, @Param("example") EbeanRecordExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ebean_record
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(EbeanRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ebean_record
     *
     * @mbg.generated
     */
    @Update({
            "update ebean_record",
            "set member_id = #{memberId,jdbcType=DECIMAL},",
            "name = #{name,jdbcType=VARCHAR},",
            "pay_type = #{payType,jdbcType=INTEGER},",
            "pay_state = #{payState,jdbcType=INTEGER},",
            "e_num = #{eNum,jdbcType=INTEGER},",
            "giving_num = #{givingNum,jdbcType=INTEGER},",
            "total_num = #{totalNum,jdbcType=INTEGER},",
            "money = #{money,jdbcType=REAL},",
            "create_date = #{createDate,jdbcType=TIMESTAMP}",
            "where id = #{id,jdbcType=DECIMAL}"
    })
    int updateByPrimaryKey(EbeanRecord record);

    List<EbeanRecord> searchEbeanRecord(@Param("keyword") String keyword, @Param("payState") Integer payState);
}